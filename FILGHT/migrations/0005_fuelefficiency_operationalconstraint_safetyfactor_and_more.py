# Generated by Django 5.2.3 on 2025-06-21 10:17

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('FILGHT', '0004_alter_flight_options_remove_flight_cost_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='FuelEfficiency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('aircraft_type', models.CharField(max_length=50)),
                ('altitude', models.FloatField()),
                ('speed', models.FloatField()),
                ('fuel_consumption', models.FloatField()),
                ('distance', models.FloatField()),
                ('fuel_per_mile', models.FloatField()),
                ('efficiency_rating', models.FloatField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='OperationalConstraint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('constraint_type', models.CharField(choices=[('air_traffic', 'Air Traffic Control'), ('restricted_zone', 'Restricted Zone'), ('military_zone', 'Military Zone'), ('no_fly_zone', 'No-Fly Zone'), ('congestion', 'Congestion'), ('maintenance', 'Maintenance'), ('runway_closed', 'Runway Closed'), ('gate_unavailable', 'Gate Unavailable')], max_length=20)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('location_lat', models.FloatField()),
                ('location_lon', models.FloatField()),
                ('radius', models.FloatField(default=10)),
                ('altitude_min', models.FloatField(default=0)),
                ('altitude_max', models.FloatField(default=50000)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('impact_score', models.FloatField(default=50)),
            ],
        ),
        migrations.CreateModel(
            name='SafetyFactor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('weather', 'Weather'), ('air_traffic', 'Air Traffic'), ('terrain', 'Terrain'), ('equipment', 'Equipment'), ('crew', 'Crew'), ('maintenance', 'Maintenance')], max_length=20)),
                ('risk_level', models.CharField(choices=[('low', 'Low Risk'), ('medium', 'Medium Risk'), ('high', 'High Risk'), ('critical', 'Critical Risk')], max_length=15)),
                ('description', models.TextField()),
                ('location_lat', models.FloatField(blank=True, null=True)),
                ('location_lon', models.FloatField(blank=True, null=True)),
                ('altitude_min', models.FloatField(blank=True, null=True)),
                ('altitude_max', models.FloatField(blank=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='WeatherCondition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weather_type', models.CharField(choices=[('clear', 'Clear'), ('cloudy', 'Cloudy'), ('rain', 'Rain'), ('snow', 'Snow'), ('storm', 'Storm'), ('fog', 'Fog'), ('windy', 'Windy'), ('turbulence', 'Turbulence')], max_length=20)),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('severe', 'Severe')], default='low', max_length=10)),
                ('temperature', models.FloatField(blank=True, null=True)),
                ('wind_speed', models.FloatField(blank=True, null=True)),
                ('wind_direction', models.FloatField(blank=True, null=True)),
                ('visibility', models.FloatField(blank=True, null=True)),
                ('pressure', models.FloatField(blank=True, null=True)),
                ('humidity', models.FloatField(blank=True, null=True)),
                ('location_lat', models.FloatField()),
                ('location_lon', models.FloatField()),
                ('altitude', models.FloatField(default=0)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.AddField(
            model_name='flight',
            name='altitude_penalties',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='flight',
            name='congestion_zones',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='flight',
            name='delay_penalties',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='flight',
            name='optimization_complexity',
            field=models.CharField(choices=[('low', 'Low Complexity'), ('medium', 'Medium Complexity'), ('high', 'High Complexity'), ('extreme', 'Extreme Complexity')], default='medium', max_length=20),
        ),
        migrations.AddField(
            model_name='flight',
            name='waypoint_count',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='flight',
            name='weather_data_points',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='route',
            name='altitude_penalties',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='route',
            name='average_operational_constraint',
            field=models.FloatField(default=0.0),
        ),
        migrations.AddField(
            model_name='route',
            name='average_safety_risk',
            field=models.FloatField(default=0.0),
        ),
        migrations.AddField(
            model_name='route',
            name='average_weather_impact',
            field=models.FloatField(default=0.0),
        ),
        migrations.AddField(
            model_name='route',
            name='complexity_score',
            field=models.FloatField(default=0.0),
        ),
        migrations.AddField(
            model_name='route',
            name='congestion_zones',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='route',
            name='delay_penalties',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='route',
            name='fuel_efficiency_rating',
            field=models.FloatField(default=0.0),
        ),
        migrations.AddField(
            model_name='route',
            name='optimization_complexity',
            field=models.CharField(choices=[('low', 'Low Complexity'), ('medium', 'Medium Complexity'), ('high', 'High Complexity'), ('extreme', 'Extreme Complexity')], default='medium', max_length=20),
        ),
        migrations.AddField(
            model_name='route',
            name='waypoint_count',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='route',
            name='weather_data_points',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='flight',
            name='fuel_efficiency',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='FILGHT.fuelefficiency'),
        ),
        migrations.AddField(
            model_name='route',
            name='fuel_efficiency',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='FILGHT.fuelefficiency'),
        ),
        migrations.AddField(
            model_name='flight',
            name='operational_constraints',
            field=models.ManyToManyField(blank=True, to='FILGHT.operationalconstraint'),
        ),
        migrations.AddField(
            model_name='route',
            name='operational_constraints',
            field=models.ManyToManyField(blank=True, to='FILGHT.operationalconstraint'),
        ),
        migrations.AddField(
            model_name='flight',
            name='safety_factors',
            field=models.ManyToManyField(blank=True, to='FILGHT.safetyfactor'),
        ),
        migrations.AddField(
            model_name='route',
            name='safety_factors',
            field=models.ManyToManyField(blank=True, to='FILGHT.safetyfactor'),
        ),
        migrations.CreateModel(
            name='Waypoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('altitude', models.FloatField()),
                ('waypoint_type', models.CharField(choices=[('nav', 'Navigation'), ('weather', 'Weather Avoidance'), ('traffic', 'Traffic Avoidance'), ('terrain', 'Terrain Avoidance'), ('restriction', 'Restriction Avoidance')], max_length=20)),
                ('sequence_number', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('route', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='waypoints', to='FILGHT.route')),
            ],
            options={
                'ordering': ['sequence_number'],
            },
        ),
        migrations.AddField(
            model_name='flight',
            name='flight_waypoints',
            field=models.ManyToManyField(blank=True, related_name='flights', to='FILGHT.waypoint'),
        ),
        migrations.AddField(
            model_name='route',
            name='route_waypoints',
            field=models.ManyToManyField(blank=True, related_name='routes', to='FILGHT.waypoint'),
        ),
        migrations.AddField(
            model_name='fuelefficiency',
            name='weather_condition',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='FILGHT.weathercondition'),
        ),
        migrations.AddField(
            model_name='flight',
            name='weather_conditions',
            field=models.ManyToManyField(blank=True, to='FILGHT.weathercondition'),
        ),
        migrations.AddField(
            model_name='route',
            name='weather_conditions',
            field=models.ManyToManyField(blank=True, to='FILGHT.weathercondition'),
        ),
    ]
